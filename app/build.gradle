apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'



android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.sashnikov.android.calltracker"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    dataBinding {
        enabled true
    }

    testOptions {

        unitTests {
            includeAndroidResources = true
        }
    }

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"
    def room_version = "2.2.5"
    def work_version = "2.3.4"



    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.4'
//    implementation 'org.threeten:threetenbp:1.4.4'

    implementation 'com.google.firebase:firebase-analytics:17.4.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.1.0'


    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "androidx.work:work-testing:$work_version"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'org.robolectric:robolectric:4.3.1'
    androidTestImplementation group: 'org.mockito', name: 'mockito-android', version: '3.3.3'


    implementation 'com.google.dagger:dagger:2.28'
    implementation group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation group: 'com.google.dagger', name: 'dagger-android', version: '2.28'
//    implementation group: 'com.google.dagger', name: 'dagger-android-support', version: '2.28'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28'
//    annotationProcessor 'com.google.dagger:dagger-android-processor:2.28'

    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
    annotationProcessor 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    implementation "androidx.work:work-runtime:$work_version"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"



    implementation group: 'androidx.preference', name: 'preference', version: '1.1.1'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"


    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'


}
